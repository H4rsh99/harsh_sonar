pipeline {
    agent any
    parameters {
        choice(name: 'What_do_you_want', choices: ['Create', 'Destroy'], description: 'Select the environment')
    }
    tools {
        terraform 'terraform'
    }
    stages {
        stage('Checkout') {
            steps {
                script {
                    // Clean workspace before checking out
                    deleteDir()

                    // Checkout the Git repository
                    checkout([$class: 'GitSCM',
                              branches: [[name: 'main']],
                              userRemoteConfigs: [[url: 'https://github.com/H4rsh99/harsh_sonar.git']]])
                }
            }
        }

        stage('Terraform Init') {
            steps {
                script {
                    // Change to the directory where your Terraform configuration files are located
                    dir('sonar_terra/main.tf') {
                        // Initialize Terraform
                        sh 'terraform init'
                    }
                }
            }
        }

        stage('Terraform Apply') {
            when {
                expression { params.What_do_you_want == 'Create' }
            }
            steps {
                script {
                    // Change to the directory where your Terraform configuration files are located
                    dir('sonar_terra/main.tf') {
                        // Apply Terraform configuration
                        sh 'terraform apply --auto-approve'
                    }
                }
            }
        }

        stage('Terraform Destroy') {
            when {
                expression { params.What_do_you_want == 'Destroy' }
            }
            steps {
                script {
                    // Change to the directory where your Terraform configuration files are located
                    dir('sonar_terra/main.tf') {
                        // Destroy Terraform resources
                        sh 'terraform destroy --auto-approve'
                    }
                }
            }
        }
    }
}

